name: 'Publish Tauri Application'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'  # 自动缓存 yarn 依赖

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc  # 为 Windows 明确指定目标

      # 平台特定设置
      - name: Linux Dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libcups2-dev \
            libssl-dev  # 确保 OpenSSL 开发包已安装

      - name: Windows OpenSSL Setup
        if: matrix.platform == 'windows-latest'
        run: |
          choco install openssl --version=3.1.4 -y --no-progress
          echo "OPENSSL_DIR=C:\Program Files\OpenSSL-Win64" >> $env:GITHUB_ENV

      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          key: rust-${{ matrix.platform }}

      - name: Install Frontend Dependencies
        run: yarn install --frozen-lockfile  # 使用固定版本

      - name: Build and Publish
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PASSWORD: ""
          # Windows 特定环境变量
          OPENSSL_DIR: ${{ matrix.platform == 'windows-latest' && 'C:\Program Files\OpenSSL-Win64' || '' }}
        with:
          tagName: laundry-v__VERSION__
          releaseName: 'Laundry v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}